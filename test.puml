@startuml
class tt.map.MapLoader {
+ Map map
- String levelPath
- String picPath
+ {static} Map loadMap(String)
+ Map getMap()
+ void setMap(Map)
+ String getLevelPath()
+ String getPicPath()
}
interface tt.player.Entity {
~ void update()
~ void setX(int)
~ void setY(int)
~ int getX()
~ int getY()
}
class tt.processingTest {
+ Map map
+ ArrayList<Tank> tanks
~ Tank currentTank
+ int currentPlayerIndex
~ int lastSwitchTime
- boolean showArrow
~ int selectedLevel
- JSONObject config
- String levelPath
- String picPath
~ ArrayList<Bullet> projectiles
~ Explosion explosion
~ Explosion tankExplosion
- boolean isExpFinished
~ boolean isTankExpFinished
- MapLoader mapLoader
+ PImage background
+ PImage tree
+ PImage fuel
+ PImage wind
+ PImage gas
+ PImage repair
+ PImage ex
~ PImage parachuteKit
~ boolean gameEnd
~ boolean gameRestarted
+ void setup()
+ void settings()
+ void draw()
+ int suriveTanks()
+ Tank getHighestScoringPlayer()
+ void keyPressed()
~ void restartGame()
+ void shoot()
+ void startGame()
+ void turnSwitch()
+ void deployParachute(Tank,int)
+ boolean checkTankCollision(int,int)
}
class tt.render.GameRender {
}
class tt.player.Explosion {
- float x
- float maxRadius
- float currentRadiusRed
- float currentRadiusOrange
- float currentRadiusYellow
- float growthRate
- int s
- boolean isTankExplosion
+ void update()
+ boolean isFinished()
+ float getX()
+ void setX(float)
+ float getY()
+ void setY(float)
+ float getMaxRadius()
+ void setMaxRadius(float)
+ float getCurrentRadiusRed()
+ void setCurrentRadiusRed(float)
+ float getCurrentRadiusOrange()
+ void setCurrentRadiusOrange(float)
+ float getCurrentRadiusYellow()
+ void setCurrentRadiusYellow(float)
+ float getGrowthRate()
+ void setGrowthRate(float)
+ int getS()
+ void setS(int)
+ boolean isTankExplosion()
+ void setTankExplosion(boolean)
}
interface tt.player.TankInterface {
~ void rotateTower(double)
~ void move(int,int)
~ void repair()
~ void increaseFuel()
~ void increaseParachute()
~ void gainParachute()
~ void gainFuel(int)
~ void gainLife(int)
~ void increasePower()
~ void gainPower(int)
~ int getAngle()
~ char getSymbol()
~ int getX()
~ void setX(int)
~ int getY()
~ void setY(int)
~ int getLife()
~ void setLife(int)
~ boolean isAlive()
~ void setAlive(boolean)
}
class tt.map.Wind {
- int direction
- int strength
+ void update()
+ int getDirection()
+ void setDirection(int)
+ int getStrength()
+ void setStrength(int)
}
class tt.map.Position {
- char symbol
- int x
- int y
- int angle
+ int getX()
+ int getY()
+ void setX(int)
+ void setY(int)
+ String getSymbol()
+ void setSymbol(char)
+ int getAngle()
+ void setAngle(int)
}
class tt.player.Bullet {
- char symbol
- int x
- int y
- float vx
- float vy
- int angle
- int power
- float gravity
- boolean active
- boolean isExploded
- boolean ex
+ {static} int angleConvert(int)
+ void update(Wind)
+ boolean isExploded(Map)
+ char getSymbol()
+ int getX()
+ void setX(int)
+ int getY()
+ void setY(int)
+ double getAngle()
+ boolean isOutOfMap()
+ int getPower()
+ boolean isActive()
+ void setActive(boolean)
+ boolean isEx()
}
class tt.player.Tank {
- char symbol
- int x
- int y
- int life
- boolean isAlive
- int activationTime
- double angle
- int power
- int fuel
- int parachute
- boolean isShooted
- int score
- int[] toolBag
- boolean canon
+ void rotateTower(double)
+ void parachute(int,int)
+ void move(int,int)
+ void gainScore(int,Tank)
+ void repair()
+ void increaseFuel()
+ void increaseParachute()
+ void gainParachute()
+ void gainFuel(int)
+ void gainLife(int)
+ void increasePower()
+ void gainPower(int)
+ int getAngle()
+ void setAngle(double)
+ char getSymbol()
+ int getX()
+ void setX(int)
+ int getY()
+ void setY(int)
+ int getLife()
+ void setLife(int)
+ boolean isAlive()
+ void setAlive(boolean)
+ int getActivationTime()
+ int getPower()
+ void setPower(int)
+ int getFuel()
+ void setFuel(int)
+ boolean hasParachute()
+ void reduceLife(int)
+ int getParachute()
+ void setParachute(int)
+ boolean isShooted()
+ void setShooted(boolean)
+ int getScore()
+ void setScore(int)
+ int[] getToolBag()
+ void setToolBag(int[])
+ boolean isCanon()
+ void setCanon(boolean)
}
class tt.Processing {
+ Map map
+ ArrayList<Tank> tanks
- Tank currentTank
+ int currentPlayerIndex
- int lastSwitchTime
- boolean showArrow
- int selectedLevel
- JSONObject config
- String levelPath
- String picPath
~ ArrayList<Bullet> projectiles
- Explosion explosion
- Explosion tankExplosion
- boolean isExpFinished
- boolean isTankExpFinished
- MapLoader mapLoader
+ PImage background
+ PImage tree
+ PImage fuel
+ PImage wind
+ PImage gas
+ PImage repair
+ PImage ex
+ PImage parachuteKit
- boolean gameEnd
- boolean gameRestarted
+ void setup()
+ void settings()
+ void draw()
+ int suriveTanks()
+ void showFinalScores()
+ void showWinner()
+ Tank getHighestScoringPlayer()
+ List<Tank> getSortedPlayersByScore()
+ void clearStartScreen()
+ void keyPressed()
- void restartGame()
+ void shoot()
+ void startGame()
+ void drawBullet()
+ void turnSwitch()
+ void drawExplosion()
+ void deployParachute(Tank,int)
+ boolean checkTankCollision(int,int)
+ void drawHUD()
+ void drawGame()
+ void drawMap(int[][],int,int[])
+ void drawPlayers(ArrayList<Position>,JSONObject)
}
class tt.map.Map {
- List<List<Character>> grid
- int[][] terrain
- ArrayList<Position> playerPositions
- ArrayList<Position> treePositions
- int[] heightsArray
- String backgroundFileName
- JSONObject playerNames
- int terrainColor
- String treeFileName
- ArrayList<Tank> tanks
- String parachuteFileName
- Wind wind
- String windFileName
- String fuelFileName
- String gasFileName
- String repairFileName
- String exFileName
- String parachuteKitFileName
- String levelName
+ void updateTerrain(int,int)
+ int[] smoothData(int[],int)
+ int[] interpolateArray(int[],int)
+ int[] heightsArray(int[][])
+ List<List<Character>> getGrid()
+ int[][] getTerrain()
+ ArrayList<Position> getPlayerPositions()
+ ArrayList<Position> getTreePositions()
+ int[] getHeightsArray()
+ void setHeightsArray(int[])
+ void setGrid(List<List<Character>>)
+ void setTerrain(int[][])
+ void setPlayerPositions(ArrayList<Position>)
+ void setTreePositions(ArrayList<Position>)
+ String getBackgroundFileName()
+ void setBackgroundFileName(String)
+ JSONObject getPlayerNames()
+ void setPlayerNames(JSONObject)
+ int getTerrainColor()
+ void setTerrainColor(int)
+ String getTreeFileName()
+ void setTreeFileName(String)
+ ArrayList<Tank> getTanks()
+ void setTanks(ArrayList<Tank>)
+ String getParachuteFileName()
+ void setParachuteFileName(String)
+ Wind getWind()
+ void setWind(Wind)
+ String getWindFileName()
+ void setWindFileName(String)
+ String getFuelFileName()
+ void setFuelFileName(String)
+ String getGasFileName()
+ void setGasFileName(String)
+ String getRepairFileName()
+ void setRepairFileName(String)
+ String getExFileName()
+ void setExFileName(String)
+ String getParachuteKitFileName()
+ void setParachuteKitFileName(String)
+ String getLevelName()
+ void setLevelName(String)
}
class tt.engine.GameEngine {
}
class tt.test {
- {static} Map map
- {static} ArrayList<Tank> tanks
- Tank currentTank
- int currentPlayerIndex
- int lastSwitchTime
- boolean showArrow
- int selectedLevel
- JSONObject config
- {static} String levelPath
- String picPath
- ArrayList<Bullet> projectiles
- Explosion explosion
- Explosion tankExplosion
- {static} processingTest app
- {static} Robot robot
+ void init()
+ void mapLoadTest()
+ void testSuriveTanks()
+ void testGetHighestScoringPlayer()
+ void testCheckTankCollision()
+ void testTurnSwitch()
+ void testDeployParachute()
+ void testTankInit()
+ void testTankMove()
+ void testTankMoveWhenHill()
+ void testTankTowerRotate()
+ void testChangePower()
+ void testGainScore()
+ void testRepair()
+ void testIncreaseParachute()
+ void testIncreasePower()
+ void testIncreaseFuel()
+ void testGainPower()
+ void testGainFuel()
+ void testGainLife()
+ void testReduceLife()
+ void TestGainParachute()
+ void testRepairTank()
+ void testIncreaseFuelTank()
+ void testUseParachuteTool()
+ void testIncreasePowerTank()
+ void testRestartGame()
+ void testGameEndandGameRestartIsTrue()
+ void testGameEndandAllIsFalse()
+ void testRestartGameWhenGameEndIsTrueAndGameRestartedIsFalse()
+ void testRestartGameWhenGameEndIsFalseAndGameRestartedIsTrue()
+ void testRestartGameWhenGameEndIsFalseAndGameRestartedIsFalse()
+ void testShootWhenCanonTrue()
+ void testShootWhenCanonFalse()
+ void testTurnSwitchWhenCurrentTankIsAlive()
+ void testTurnSwitchWhenCurrentTankIsAllAlive()
+ void testTurnSwitchWhenNextTankIsDead()
~ void testRestartGameWhenGameEndAndNotRestarted()
~ void testRestartGameWhenGameEndAndRestarted()
~ void testRestartGameWhenNotGameEnd()
+ void testExplosionUpdate()
+ void testExplosionIsFinished()
+ void testExplosionGettersAndSetters()
+ void testDeployParachuteWhenTankIsNotAlive()
+ void testDeployParachuteWhenTankHasNoParachuteAndBelowThreshold()
~ void testDeployParachuteWhenTankHasNoParachuteAndAboveThreshold()
~ void testDeployParachuteWhenTankHasParachuteAndAboveThreshold()
~ void testCheckTankCollisionWithTankExplosion()
+ void testBulletShoot()
+ void testBulletConstruction()
+ void testUpdateBullet()
+ void testUpdateUnActiveBullet()
+ void testIsExploded()
+ void testOutOfMapX()
+ void testOutOfMapY()
+ void testAngleConvert()
+ void testConstructor()
+ void testUpdate()
+ void testGetDirection()
+ void testSetDirection()
+ void mapTestConstructor()
+ void testUpdateTerrain()
+ void testSmoothData()
+ void testInterpolateArray()
+ void testTankTowerRotate(int,int,int,String)
- void testTankMovement(Tank,int,int,String)
- void testTankMovementHill(Tank,int,int,int,String)
}
class tt.Main {
+ {static} void main(String[])
}
class tt.ConfigReader {
- String levelPath
- String picPath
- JSONObject config
+ int getNumLevels()
+ JSONObject getLevel(int)
+ JSONObject getPlayerColors()
}


processing.core.PApplet <|-- tt.map.MapLoader
processing.core.PApplet <|-- tt.processingTest
processing.core.PApplet <|-- tt.player.Explosion
tt.player.TankInterface <|.. tt.player.Tank
tt.PApplet <|-- tt.Processing
processing.core.PApplet <|-- tt.test
@enduml